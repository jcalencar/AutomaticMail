const sheetName = 'form data';
const scriptProp = PropertiesService.getScriptProperties();
const recipientEmail = 'email@gmail.com'; 

function intialSetup() {
  const activeSpreadsheet = SpreadsheetApp.getActiveSpreadsheet();
  scriptProp.setProperty('key', activeSpreadsheet.getId());
}

function sendEmailNotification(formData) {
  const subject = 'Nova mensagem do formulário de contato';
  const body = `
    Nome: ${formData.name}
    Telefone: ${formData.phone}
    Email: ${formData.email}
    Mensagem: ${formData.message}
  `;

  MailApp.sendEmail(recipientEmail, subject, body);
}

function doPost(e) {
  const lock = LockService.getScriptLock();
  lock.tryLock(10000);

  try {
    const doc = SpreadsheetApp.openById(scriptProp.getProperty('key'));
    const sheet = doc.getSheetByName(sheetName);

    const headers = sheet.getRange(1, 1, 1, sheet.getLastColumn()).getValues()[0];
    const nextRow = sheet.getLastRow() + 1;

    const newRow = headers.map(function(header) {
      return header === 'Date' ? new Date() : e.parameter[header];
    });

    sheet.getRange(nextRow, 1, 1, newRow.length).setValues([newRow]);

    // Enviar email de notificação
    const formData = {
      name: e.parameter['Nome'],
      phone: e.parameter['Telefone'],
      email: e.parameter['Email'],
      message: e.parameter['Mensagem']
    };
    sendEmailNotification(formData);

    return ContentService
      .createTextOutput(JSON.stringify({ 'result': 'success', 'row': nextRow }))
      .setMimeType(ContentService.MimeType.JSON);
  }

  catch (e) {
    return ContentService
      .createTextOutput(JSON.stringify({ 'result': 'error', 'error': e }))
      .setMimeType(ContentService.MimeType.JSON);
  }

  finally {
    lock.releaseLock();
  }
}

